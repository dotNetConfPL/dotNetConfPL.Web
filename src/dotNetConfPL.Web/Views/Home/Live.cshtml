@model dotNetConfPL.Web.Controllers.StreamDocModel

@* TODO
    2. Fix the internal cache so that we dont get the url from cloudant all the time
    3. Set set stream button ( maybe on separate site ? )
        - Add action to update internal cache
    4. Manual Stream Refresh
    5. add logic that converts watch to embed so that we can just use youtube link
    6. generate new password hash
    7. enable password logic
 *@
@{
    ViewBag.Title = "dotnetconf.pl";
}

@{
    var url = @Model.stream;
}

<div id="inject-place">
    <label id="stream-title">Tu bedzie tytul streama</label>
    <iframe width="420" height="315" src="@url" frameborder="0" allowfullscreen></iframe>
</div>

<div>
    <p class="last-chance-text">
        Stream odświeża się automatycznie, w razie awarii
        <a style="font-size:12px;" id="ForceRefresh" href="@Url.Action("Stream")">Odświeżenie ostatniej szansy :)</a>
    </p>
</div>

<div class="success">
    <div class="container text-center">
        <div class="row" style="margin-top: 100px">
            <div class="col-md-6 col-md-offset-3">
                <h1>Live Stream</h1>
                <hr/>
            </div>
        </div>
    </div>
</div>

<div>
    <input id="new-stream"/>
    <button id="btn-set-stream">SET STREAM</button>
</div>

@section scripts
{
    <script src="~/lib/signalr/jquery.signalR.min.js"></script>
    <script src="signalr/hubs"></script>
    <script type="text/javascript">
        $(function () {
            var injectHub = $.connection.injectHub;
            injectHub.client.updateClient = function(stream) {
                $('#inject-place iframe').attr('src', stream);
            };

            $.connection.hub.start().done(function () {
                $('#btn-set-stream').click(function () {
                    injectHub.server.updateStream($('#new-stream').val(), $('#password').val());

                    //TODO: this will update the internal cache
                    //$.post("@Url.Action("UpdateStream")", { newStream: $('#new-stream').val(), password: $('#password').val()});
                });
            });

            $.connection.hub.disconnected(function () {
                setTimeout(function () {
                    $.connection.hub.start();
                }, 10000);
            });
        });
    </script>
}

